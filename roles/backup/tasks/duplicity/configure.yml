---
- name: Ensure backup user exists
  user:
    name: "{{ backup_user }}"
    generate_ssh_key: yes
    update_password: always # C(always) will update passwords if they differ.  C(on_create) will only set the password for newly created users.
    ssh_key_type: rsa # Optionally specify the type of SSH key to generate. Available SSH key types will depend on implementation present on target host.
    password: "{{ backup_user_password }}"
    ssh_key_bits: 4096
    append: no
    group: "{{ backup_user_group }}"
    createhome: no
    system: yes
    state: present
    ssh_key_file: .ssh/id_rsa
    login_class: # Optionally sets the user's login class for FreeBSD, OpenBSD and NetBSD systems.
    shell: /bin/nologin
  tags:
    - Backup
    - Client
    - Deployment
    - Duplicity

- name: backup-configure | Ensure for backup directories is exits
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ backup_user }}"
    group: "{{ backup_group }}"
  with_items:
  - "{{ config_directory }}"
  - "{{ work_directory }}"
  - "{{ temp_directory }}"

- name: backup-configure | Create profile directories
  file:
    path: "{{ config_directory }}/{{ item.name }}"
    state: directory
    mode: 0700
    owner: "{{ item.user | default(backup_user) }}"
    group: "{{ item.group | default(backup_user_group) }}"
  with_items: "{{ backup_profiles }}"

- name: backup-configure | Configure profiles
  template:
    src: conf.j2
    dest: "{{ config_directory }}/{{ item.name }}/conf"
    owner: "{{ item.user | default(backup_user) }}"
    group: "{{ item.group | default(backup_user_group) }}"
  with_items: "{{ backup_profiles }}"

- name: backup-configure | Configure exclude lists
  template:
    src: exclude.j2
    dest: "{{ config_directory }}/{{ item.name }}/exclude"
    owner: "{{ item.user | default(backup_user) }}"
    group: "{{ item.group | default(backup_group) }}"
  with_items: "{{ backup_profiles }}"
